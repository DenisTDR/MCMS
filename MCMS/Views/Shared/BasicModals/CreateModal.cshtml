@using MCMS.SwaggerFormly.FormParamsHelpers
@using MCMS.SwaggerFormly.Models
@using MCMS.Base.Extensions
@using MCMS.Base.Repositories
@using MCMS.SwaggerFormly
@inject ITranslationsRepository TransRepo
@{
    ViewBag.Title = $"{await TransRepo.GetValueOrSlug("create")} {StringExtensions.ToLowerFirstChar(ViewBag.ModelName)}";
    var formParams = ViewBag.FormParams as FormlyFormParams ?? (ViewBag.FormParamsService as FormParamsService)?.ForCreate() ?? throw new Exception("Don't have form params :(");
    formParams.AddOption("hideSubmitButton", true);
}
<div class="modal-body" id="@formParams.FormInstanceId-modal-body">
    @await Html.BlindPartialAsync("Formly/FormlyForm", formParams)
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">@await TransRepo.GetValueOrSlug("cancel")</button>
    <button type="button" class="btn btn-primary" id="@formParams.FormInstanceId-submit-button">@await TransRepo.GetValueOrSlug("save")</button>
</div>
@using (Html.BeginMPageScripts())
{
    <script>
    function callback@(formParams.FormInstanceId)(sender, params) {
        // console.log(sender, params);
        var modal = $("#@formParams.FormInstanceId-modal-body").closest(".modal");
        modal.data('result', {params: params});
        modal.modal('hide');
    }
    </script>
}