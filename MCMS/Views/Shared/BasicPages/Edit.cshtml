@using MCMS.SwaggerFormly.FormParamsHelpers
@using MCMS.Base.Extensions
@using MCMS.Base.Repositories
@using MCMS.SwaggerFormly
@using MCMS.SwaggerFormly.Models
@model MCMS.Base.Data.Entities.IEntity
@inject ITranslationsRepository TransRepo
@{
    ViewBag.Title = $"{await TransRepo.GetValueOrSlug("edit")} {StringExtensions.ToLowerFirstChar(ViewBag.ModelName)} {(!string.IsNullOrEmpty(Model.ToString()) ? $"'{Model}'" : "")}";
    var formParams = ViewBag.FormParams as FormlyFormParams ?? (ViewBag.FormParamsService as FormParamsService)?.ForPatch(Model.Id) ?? throw new Exception("Don't have form params :(");
    formParams.AddOption("hideSubmitButton", true);
    var returnUrl = Context.Request.Query.ContainsKey("returnUrl") ? (string) Context.Request.Query["returnUrl"] : null;
}

<h2 class="mt-4">@ViewBag.Title</h2>
<div class="container">
    <div class="row">
        <div class="col-12">
            @await Html.BlindPartialAsync("Formly/FormlyForm", formParams)
        </div>
    </div>
    <div class="row">
        <div class="col-12 justify-content-between d-flex">
            <button type="button" class="btn btn-secondary" onclick="callback@(formParams.FormInstanceId)()">@await TransRepo.GetValueOrSlug("cancel")</button>
            <button type="button" class="btn btn-primary" id="@formParams.FormInstanceId-submit-button">@await TransRepo.GetValueOrSlug("save")</button>
        </div>
    </div>
</div>

@using (Html.BeginMPageScripts())
{
    <script>
       function callback@(formParams.FormInstanceId)(sender, params) {
           var returnUrl = '@returnUrl';
           if(returnUrl) {
               window.location.href = returnUrl;
           } else {
               window.history.back();
           }
       }
    </script>
}