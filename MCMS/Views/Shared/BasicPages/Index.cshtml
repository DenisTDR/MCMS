@model MCMS.Display.ModelDisplay.ModelDisplayTableConfig

@using MCMS.Helpers
@using MCMS.Models
@using MCMS.SwaggerFormly.Extensions
@using MCMS.Exceptions

@{
    // var returnUrl = Context.Request.Query.ContainsKey("returnUrl") ? (string) Context.Request.Query["returnUrl"] : Url.Action("Index");
    var tableId = Utils.GenerateRandomHexString();
    ViewBag.Title = Model?.IndexPageTitle ?? "Null model or title";
    if (Model == null)
    {
        throw new KnownException("Invalid model provided for this view.", 500);
    }

    ViewBag.ModalCallback = "reloadTable" + tableId;
}

<h3 class="mt-4 mb-4">@ViewBag.Title</h3>
@if (Model.CreateNewItemLink != null)
{
    <div class="mb-3 d-flex justify-content-end">
        <partial name="Partials/_MRichLink" model="Model.CreateNewItemLink"/>
    </div>
}
<table id="table-@tableId" class="table table-striped table-bordered">
    <thead>
    <tr>
        @if (Model.HasTableIndexColumn)
        {
            <th></th>
        }
        @foreach (var tableColumn in Model.TableColumnsOrdered)
        {
            <th>@tableColumn.Name</th>
        }
    </tr>
    </thead>
</table>

<div id="actions-cell-template-@tableId" class="d-none">
    @foreach (var action in Model.TableItemActions)
    {
        <partial name="Partials/_MRichLink" model="action"/>
    }
</div>

@using (Html.BeginMPageScripts())
{
    <script>
    function reloadTable@(tableId)(sender, params) {
        if(params && params.params) {
            table.ajax.reload();
        }
    }
    var table = bindDefaultDataTables(
        $("#table-@tableId"),   
        "@Model.TableItemsApiUrl", 
        @Html.Raw(Model.TableColumnsSerializedForDataTables),
        $("#actions-cell-template-@tableId").html(), 
        @Model.HasTableIndexColumn.ToString().ToLower());
    </script>
}