@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using MCMS.Base.Exceptions
@using MCMS.Base.Extensions
@model MCMS.Models.ErrorViewModel
@inject IWebHostEnvironment HostEnvironment
@{
    ViewData["Title"] = "Error";
}
@if (Layout == "_ModalLayout")
{
    @Html.Raw("<div class=\"modal-body\">")
}
<div class="error-page">
    <h2 class="text-danger">Error@(Model.StatusCode != 0 ? " " + Model.StatusCode : "")</h2>
    <h3 class="text-danger">An error occurred while processing your request.</h3>
    @if (Model?.ShowRequestId == true)
    {
        <p>
            <strong>Request ID:</strong> <code>@Model.RequestId</code>
        </p>
    }
    @if (Model?.Exception is KnownException kEx)
    {
        Model.StatusCode = kEx.Code;
    }
    @if (Model.StatusCode != 0)
    {
        <p>
            <strong>Status code:</strong>
            <code>
                <b>@Model.StatusCode - @Model.StatusCodeMessage()</b>
            </code>
        </p>
    }
    @{
        var exc = Model?.Exception;
    }

    @while (exc != null)
    {
        <div class="exception">
            <svg height="8" width="8">
                <circle cx="4" cy="4" r="4" fill="black"/>
            </svg>
            <div class="exception-text">
                @if (exc is KnownException kExc)
                {
                    @Html.Raw(kExc.HtmlMessage ?? kExc.Message)
                }
                else
                {
                    @exc.Message
                }
            </div>
        </div>
        @if (HostEnvironment.IsDevelopment())
        {
            <pre>
@exc.ToString()
            </pre>
        }
        <hr/>
        exc = exc.InnerException;
    }
    @if (!HostEnvironment.IsDevelopment())
    {
        <div>
            <i>Check admin logs for full stack trace and more details.</i>
        </div>
    }
</div>

@using (Html.BeginMStyles())
{
    <style>
        .error-page {
            margin-top: 30px;
        }
        .error-page .exception {
            display: flex;
            flex-direction: row;
            align-items: center;
        }
        .error-page .exception svg {
            margin-right: 15px;
            margin-left: 10px;
            min-width: 8px;
        }
        .error-page .exception-text {
            font-size: 1.2em;
            font-weight: 500;
            color: #666;
        }
        .error-page .exception-text i {
            color: #333;
            font-weight: bold;
        }
    </style>
}
@if (Layout == "_ModalLayout")
{
    @Html.Raw("</div>")
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Ok</button>
    </div>
}