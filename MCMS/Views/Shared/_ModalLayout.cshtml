@using MCMS.Base.Extensions
@using Microsoft.Extensions.Options
@using MCMS.Base.Builder
@inject IOptions<LayoutIncludesOptions> LayoutIncludes
@foreach (var valueLayoutInclude in LayoutIncludes.Value.GetAllForModals)
{
    await Html.RenderBlindPartialAsync(valueLayoutInclude, null, ViewData);
}
@Html.RenderMStyles()
<div class="modal stacked-modal fade" role="dialog" aria-hidden="true" tabindex="-1" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog @(ViewBag.ModalDialogClasses ?? "modal-lg") modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            @if (!string.IsNullOrEmpty(ViewBag.Title))
            {
                <div class="modal-header">
                    <h5 class="modal-title">@Html.Raw(ViewBag.Title)</h5>
                    @if (ViewBag.ModalHasCloseButtonInHeader is bool hasButton && hasButton)
                    {
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    }

                </div>
            }
            @RenderBody()
        </div>
    </div>
</div>
@Html.RenderMScripts()
@Html.RenderMPageScripts()